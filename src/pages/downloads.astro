---
import Layout from '../layouts/Layout.astro';
import Title from '../components/Title.astro';
import BrandLink from '../components/BrandLink.astro';

const { frontmatter } = Astro.props;
import json from '../downloads.json'

var days : number[] = []
var downloads : number[] = []
Object.keys(json).forEach(key => {
    const dmy = key.split("/")
    const day = new Date(parseInt(dmy[2]), parseInt(dmy[1]) - 1, parseInt(dmy[0])).getTime()
    const downloadCount = (json as any)[key]["hacktix.winch"]

    downloads.push(downloadCount)
    days.push(day);
});

const indices = Array.from(days.keys());
indices.sort((a, b) => days[a] < days[b] ? -1 : 1)

const sortedDates = indices.map(i => days[i])
const sortedDownloads = indices.map(i => downloads[i])

var firstDate = new Date(Math.min(...sortedDates));
var lastDate = new Date(Math.max(...sortedDates));
---

<download-chart data-days={sortedDates} data-downloads={sortedDownloads}></download-chartt>

<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"/>
<script>
    class DownloadChart extends HTMLElement {
        constructor() {
            super();
            const dates = this.dataset.days?.split(",").map((x : string) => parseInt(x)) as number[];
            const downloads = this.dataset.downloads?.split(",").map((x : string) => parseInt(x)) as number[];

            const stringDates = dates.map((x) => new Date(x).toLocaleDateString(undefined, {month: 'long', day: 'numeric', year: 'numeric'}))
            
            //@ts-ignore
            new Chart("myChart", {
                type: "line",
                data: {
                    labels: stringDates,
                    datasets: [{
                    fill: false,
                    lineTension: 0,
                    backgroundColor: "rgba(255,255,255,1.0)",
                    borderColor: "rgba(255,255,255,0.5)",
                    data: downloads
                    }]
                },
                options: {
                    legend: {display: false},
                    scales: {
                        yAxes: [{
                            scaleLabel: {
                                display: true,
                                labelString: "Downloads",
                                fontSize: 20,
                                padding: 16,
                                fontColor: 'white'
                            },
                            ticks: {
                                fontSize: 16,
                                beginAtZero: true,
                                max: Math.max(...downloads),
                                // Only show first and last ticks
                                callback: function(value : string, index : number, values : string[]) {
                                    return (index == 0 || index == values.length / 2) ? value : ""
                                },
                                fontColor: 'white'
                            }
                        }],
                        xAxes: [{
                            scaleLabel: {
                                display: true,
                                labelString: "Date",
                                fontSize: 20,
                                padding: 20,
                                fontColor: 'white'
                            },
                            ticks: {
                                fontSize: 12,
                                // Only show first and last ticks
                                callback: function(value : string, index : number, values : string[]) {
                                    return (index == 0 || index == values.length - 1 || index == values.length / 2) ? value : ""
                                },
                                fontColor: 'white'
                            }
                        }]
                    }
                }
            });
        }
    }

    customElements.define('download-chart', DownloadChart);
</script>

<Layout title="DREDGE Mods">
    <main>
        <Title title="Downloads" />
        <div class="w-100 justify-content-center d-flex">
            <div class="w-md-50">
                <p>Showing downloads of Winch from {firstDate.toDateString()} to {lastDate.toDateString()}</p>
                <p>Winch has been downloaded <b>{sortedDownloads[sortedDownloads.length - 1] - sortedDownloads[Math.max(sortedDownloads.length - 8, 0)]}</b> times this week.</p>
            </div>
        </div>
        <div class="w-100 justify-content-center d-flex">
            <div style="display:block; width:100%; padding-right:100px;">
                <canvas id="myChart" style="width:100%; padding-right=80px;"></canvas>
            </div>

        </div>

    </main>
</Layout>